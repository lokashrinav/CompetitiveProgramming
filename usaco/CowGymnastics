/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>     // For standard input and output operations
#include <vector>       // For using the vector container
#include <algorithm>    // For algorithms like sort, max, min, etc.
#include <cmath>        // For mathematical functions
#include <string>       // For string operations
#include <map>          // For the map container
#include <set>          // For the set container
#include <queue>        // For the queue, priority_queue containers
#include <stack>        // For the stack container
#include <deque>        // For the deque container
#include <cstdio>       // For printf and scanf
#include <cstring>      // For C-style string functions like memset, strcmp, etc.
#include <climits>      // For limits of integral types
#include <cassert>      // For the assert function
#include <numeric>
#include <limits.h>

// Using namespace std to avoid typing std:: before standard library names
using namespace std;

int main()
{
    freopen("gymnastics.in", "r", stdin);
    freopen("gymnastics.out", "w", stdout);
    
    int K, N; cin >> K >> N;
    vector<vector<int>> v;
    for(int i = 0; i < K; i++) {
        vector<int> v1;
        for(int p = 0; p < N; p++) {
            int a; cin >> a;
            v1.push_back(a);
        }
        v.push_back(v1);
    }
    
    vector<pair<int, int>> prevList;
    for(int z = 0; z < K; z++) {
        vector<pair<int,int>> pa;
        for(int i = 0; i < N; i++) {
            for(int p = i + 1; p < N; p++) {
                pair<int, int> p1;
                p1.first = v[z][i];
                p1.second = v[z][p];
                pa.push_back(p1);
            }
        }
        vector<pair<int, int>> newList;
        if(z > 0) {
            for(pair<int,int> p1: pa) {
                for(pair<int,int> p2: prevList) {
                    if(p1 == p2) {
                        newList.push_back(p1);
                    }
                }
            }
            prevList = newList;
        }
        else {
            prevList = pa;
        }
        
    }
    
    cout << prevList.size() << endl;
    
    
}
