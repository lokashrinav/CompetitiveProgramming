/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>     // For standard input and output operations
#include <vector>       // For using the vector container
#include <algorithm>    // For algorithms like sort, max, min, etc.
#include <cmath>        // For mathematical functions
#include <string>       // For string operations
#include <map>          // For the map container
#include <set>          // For the set container
#include <queue>        // For the queue, priority_queue containers
#include <stack>        // For the stack container
#include <deque>        // For the deque container
#include <cstdio>       // For printf and scanf
#include <cstring>      // For C-style string functions like memset, strcmp, etc.
#include <climits>      // For limits of integral types
#include <cassert>      // For the assert function
#include <numeric>

// Using namespace std to avoid typing std:: before standard library names
using namespace std;

int main()
{
    freopen("cbarn.in", "r", stdin);
    freopen("cbarn.out", "w", stdout);
    int N; cin >> N;
    vector<int> numCows;
    for(int i = 0; i < N; i++) {
        int a; cin >> a;
        numCows.push_back(a);
    }
    
    int total = accumulate(numCows.begin(), numCows.end(), 0);
    
    int minNum;
    vector<int> num = numCows;
    int sum;
    for(int i = 0; i < N; i++) {
        sum = 0;
        int adder = total;
        
        for(int p = 0; p < N; p++) {
            adder -= num[p];
            sum += adder;
        }
        
        int first = num[0];
        num = {num.begin() + 1, num.end()};
        num.push_back(first);
        
        if(i == 0) {
            minNum = sum;
        }
        else {
            minNum = min(sum, minNum);
        }

    }
    
    cout << minNum << endl;
    
}
