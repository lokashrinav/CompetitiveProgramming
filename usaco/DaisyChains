/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>     // For standard input and output operations
#include <vector>       // For using the vector container
#include <algorithm>    // For algorithms like sort, max, min, etc.
#include <cmath>        // For mathematical functions
#include <string>       // For string operations
#include <map>          // For the map container
#include <set>          // For the set container
#include <queue>        // For the queue, priority_queue containers
#include <stack>        // For the stack container
#include <deque>        // For the deque container
#include <cstdio>       // For printf and scanf
#include <cstring>      // For C-style string functions like memset, strcmp, etc.
#include <climits>      // For limits of integral types
#include <cassert>      // For the assert function
#include <numeric>
#include <limits.h>

// Using namespace std to avoid typing std:: before standard library names
using namespace std;

int main()
{
    //freopen("diamond.in", "r", stdin);
    //freopen("diamond.out", "w", stdout);
    
    int N; cin >> N;
    vector<float> inputs;
    for(int i = 0; i < N; i++) {
        float a; cin >> a;
        inputs.push_back(a);
    }

    
    int count = 0;
    for(int i = 0; i <= N; i++) {
        for(int p = i + 1; p <= N; p++) {
            vector<float> sub = {inputs.begin() + i, inputs.begin() + p};
            float average = (float)accumulate(sub.begin(), sub.end(), 0) / sub.size();
            //cout << average << endl;
            
            /*for(float i: sub) {
                cout << i << " ";
            }
            cout << endl;*/
            for(int i = 0; i < sub.size(); i++) {
                if(sub[i] == average) {
                    count += 1;
                    break;
                }
            }
            //cout << count << endl;
        }
    }
    
    cout << count << endl;
    
}
